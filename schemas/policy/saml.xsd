<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0">
  <xs:element name="GenerateSAMLAssertion" type="generateSAMLAssertionBean"/>
  <xs:element name="Namespace" type="namespace"/>
  <xs:element name="Property" type="propertyBean"/>
  <xs:element name="ValidateSAMLAssertion" type="validateSAMLAssertionBean"/>
  <xs:element name="stepDefinitionBean" type="stepDefinitionBean"/>
  <xs:complexType name="abstractSAMLAssertionBean">
    <xs:complexContent>
      <xs:extension base="stepDefinitionBean">
        <xs:sequence/>
        <xs:attribute name="ignoreContentType" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="stepDefinitionBean" abstract="true">
    <xs:complexContent>
      <xs:extension base="leafBean">
        <xs:sequence>
          <xs:element name="DisplayName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="async" type="xs:string"/>
        <xs:attribute name="continueOnError" type="xs:string"/>
        <xs:attribute name="enabled" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="leafBean" abstract="true"/>
  <xs:complexType name="message" final="extension restriction">
    <xs:sequence>
      <xs:element name="Namespaces" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="Namespace" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="XPath" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="namespace">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="prefix" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="validateSAMLAssertionBean">
    <xs:complexContent>
      <xs:extension base="abstractSAMLAssertionBean">
        <xs:sequence>
          <xs:element name="RemoveAssertion" type="xs:boolean"/>
          <xs:element name="Source" type="message" minOccurs="0"/>
          <xs:element name="TrustStore" type="propertyBean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="propertyBean">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="ref" type="xs:string"/>
        <xs:attribute name="type" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="generateSAMLAssertionBean">
    <xs:complexContent>
      <xs:extension base="abstractSAMLAssertionBean">
        <xs:sequence>
          <xs:element name="CanonicalizationAlgorithm" type="propertyBean" minOccurs="0"/>
          <xs:element name="Issuer" type="propertyBean"/>
          <xs:element name="KeyStore" type="keyStoreEntry" minOccurs="0"/>
          <xs:element name="OutputVariable" type="outputVariable" minOccurs="0"/>
          <xs:element name="SignatureAlgorithm" type="propertyBean" minOccurs="0"/>
          <xs:element name="Subject" type="propertyBean" minOccurs="0"/>
          <xs:element name="Template" type="template" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="keyStoreEntry">
    <xs:sequence>
      <xs:element name="Alias" type="propertyBean"/>
      <xs:element name="Name" type="propertyBean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="outputVariable">
    <xs:sequence>
      <xs:element name="FlowVariable" type="flowVariable" minOccurs="0"/>
      <xs:element name="Message" type="message" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="flowVariable">
    <xs:sequence/>
    <xs:attribute name="name" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="template" final="extension restriction">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="ignoreUnresolvedVariables" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
</xs:schema>
